{"version":3,"sources":["components/Task.js","App.js"],"names":["styles","StyleSheet","create","item","backgroundColor","padding","borderRadius","flexDirection","alignItems","justifyContent","marginBottom","boxShadow","itemLeft","flexWrap","square","width","height","opacity","marginRight","itemText","maxWidth","circular","borderColor","borderWidth","Task","props","View","style","Text","text","App","useState","task","setTask","taskItems","setTaskItems","container","ScrollView","contentContainerStyle","flexGrow","keyboardShouldPersistTaps","tasksWrapper","sectionTitle","items","map","index","TouchableOpacity","key","onPress","itemsCopy","splice","completeTask","KeyboardAvoidingView","behavior","Platform","OS","addTaskWrapper","TextInput","input","placeholder","value","onChangeText","Keyboard","dismiss","addWrapper","addText","flex","paddingTop","paddingHorizontal","fontSize","fontWeight","marginTop","position","bottom","paddingVertical","AddText"],"mappings":"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","file":"static/js/app.b3e9b17e.chunk.js","sourcesContent":["import React from \"react\";\nimport {View, Text, StyleSheet} from \"react-native-web\";\n\nconst Task = (props) => {\n    return(\n        <View style={styles.item}>\n            <View style={styles.itemLeft}>\n                <View style={styles.square}>\n\n                </View>\n                <Text style={styles.itemText}>{props.text}</Text>\n            </View>\n            <View style={styles.circular}>\n\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        backgroundColor: '#FFF',\n        padding:15,\n        borderRadius:12,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent:'space-between',\n        marginBottom:20,\n        boxShadow:'0px 5px 10px #00000013',\n    },\n    itemLeft: {\n        flexDirection:'row',\n        alignItems:'center',\n        flexWrap:'wrap',\n    },\n    square: {\n        width:24,\n        height:24,\n        backgroundColor: '#55BCF6',\n        opacity:0.4,\n        borderRadius: 5,\n        marginRight: 15,\n    },\n    itemText: {\n        maxWidth:'80%',\n    },\n    circular: {\n        width:12,\n        height:12,\n        borderColor:'#55BCF6',\n        borderWidth:2,\n        borderRadius:5,\n    },\n})\n\nexport default Task;","import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport {Keyboard, Platform, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View} from 'react-native';\nimport Task from \"./components/Task\";\nimport {KeyboardAvoidingView} from \"react-native-web\";\n\nexport default function App() {\n  const [task, setTask] = useState();\n  const [taskItems, setTaskItems] = useState([]);\n\n  const handleAddTask = () => {\n    Keyboard.dismiss();\n    setTaskItems([...taskItems, task])\n    setTask(null);\n  }\n\n  const completeTask = (index) => {\n    let itemsCopy = [...taskItems];\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy)\n  }\n\n  return (\n      <View style={styles.container}>\n        {/* Added this scroll view to enable scrolling when list gets longer than the page */}\n        <ScrollView\n            contentContainerStyle={{\n              flexGrow: 1\n            }}\n            keyboardShouldPersistTaps='handled'\n        >\n\n          {/* Today's Tasks */}\n          <View style={styles.tasksWrapper}>\n            <Text style={styles.sectionTitle}>Today's tasks</Text>\n            <View style={styles.items}>\n              {/* This is where the tasks will go! */}\n              {\n                taskItems.map((item, index) => {\n                  return (\n                      <TouchableOpacity key={index}  onPress={() => completeTask(index)}>\n                        <Task text={item} />\n                      </TouchableOpacity>\n                  )\n                })\n              }\n            </View>\n          </View>\n\n        </ScrollView>\n\n        {/* Write a task */}\n        {/* Uses a keyboard avoiding view which ensures the keyboard does not cover the items on screen */}\n        <KeyboardAvoidingView\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n            style={styles.addTaskWrapper}\n        >\n          <TextInput style={styles.input} placeholder={'Write a task'} value={task} onChangeText={text => setTask(text)} />\n          <TouchableOpacity onPress={() => handleAddTask()}>\n            <View style={styles.addWrapper}>\n              <Text style={styles.addText}>+</Text>\n            </View>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED',\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20,\n  },\n  sectionTitle: {\n    fontSize:24,\n    fontWeight:'700',\n  },\n  items: {\n    marginTop:30,\n  },\n  addTaskWrapper:{\n    position:'absolute',\n    bottom:60,\n    width:'100%',\n    flexDirection:'row',\n    justifyContent:'space-around',\n    alignItems:'center',\n  },\n  input:{\n    paddingVertical:15,\n    width:250,\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius:60,\n    borderWidth:1,\n    borderColor: '#F5F5F5',\n    boxShadow:'0px 5px 10px #00000013',\n  },\n  addWrapper:{\n    width:60,\n    height:60,\n    backgroundColor:\"#fff\",\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth:1,\n    borderColor: '#F5F5F5',\n    boxShadow:'0px 5px 10px #00000013',\n  },\n  AddText:{},\n});\n"],"sourceRoot":""}